import sublime
from .generic_client_handler import GenericClientHandler
from .server_npm_resource import ServerNpmResource
from .server_resource_interface import ServerResourceInterface
from LSP.plugin import ClientConfig, WorkspaceFolder
from LSP.plugin.core.typing import Dict, List, Optional, Tuple

__all__ = ['NpmClientHandler']

class NpmClientHandler(GenericClientHandler):
    __server: Optional[ServerNpmResource]
    server_directory: str
    server_binary_path: str
    skip_npm_install: bool
    @classmethod
    def minimum_node_version(cls) -> Tuple[int, int, int]: ...
    @classmethod
    def required_node_version(cls) -> str: ...
    @classmethod
    def get_additional_variables(cls) -> Dict[str, str]: ...
    @classmethod
    def get_additional_paths(cls) -> List[str]: ...
    @classmethod
    def get_command(cls) -> List[str]: ...
    @classmethod
    def get_binary_arguments(cls) -> List[str]: ...
    @classmethod
    def manages_server(cls) -> bool: ...
    @classmethod
    def get_server(cls) -> Optional[ServerResourceInterface]: ...
    @classmethod
    def cleanup(cls) -> None: ...
    @classmethod
    def can_start(cls, window: sublime.Window, initiating_view: sublime.View, workspace_folders: List[WorkspaceFolder], configuration: ClientConfig) -> Optional[str]: ...
    @classmethod
    def _server_directory_path(cls) -> str: ...
    @classmethod
    def _node_bin(cls) -> str: ...
    @classmethod
    def _node_env(cls) -> Optional[Dict[str, str]]: ...
