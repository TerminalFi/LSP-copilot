from .types import Vector as Vector, VectorLike as VectorLike
from _typeshed import Incomplete
from typing import Any, Callable

DEF_PREC: int
DEF_FIT_TOLERANCE: float
DEF_ALPHA: float
DEF_MIX: float
DEF_HUE_ADJ: str
DEF_INTERPOLATE: str
DEF_FIT: str
DEF_HARMONY: str
DEF_DELTA_E: str
YW: int
M1: Incomplete
M2: Incomplete
C1: Incomplete
C2: Incomplete
C3: Incomplete

def xy_to_xyz(xy: VectorLike, Y: float = 1.0, scale: float = 1.0) -> Vector: ...
def xy_to_uv(xy: VectorLike) -> Vector: ...
def uv_to_xy(uv: VectorLike) -> Vector: ...
def xy_to_uv_1960(xy: VectorLike) -> Vector: ...
def uv_1960_to_xy(uv: VectorLike) -> Vector: ...
def xyz_to_xyY(xyz: VectorLike, white: VectorLike) -> Vector: ...
def pq_st2084_inverse_eotf(values: VectorLike, c1: float = ..., c2: float = ..., c3: float = ..., m1: float = ..., m2: float = ...) -> Vector: ...
def pq_st2084_eotf(values: VectorLike, c1: float = ..., c2: float = ..., c3: float = ..., m1: float = ..., m2: float = ...) -> Vector: ...
def xyz_d65_to_absxyzd65(xyzd65: VectorLike, yw: float = ...) -> Vector: ...
def absxyzd65_to_xyz_d65(absxyzd65: VectorLike, yw: float = ...) -> Vector: ...
def constrain_hue(hue: float) -> float: ...
def cmp_coords(c1: VectorLike, c2: VectorLike) -> bool: ...
def fmt_float(f: float, p: int = 0, percent: float = 0.0, offset: float = 0.0) -> str: ...
def deprecated(message: str, stacklevel: int = 2) -> Callable[..., Any]: ...
def warn_deprecated(message: str, stacklevel: int = 2) -> None: ...
