from .. import util as util
from ..cat import WHITES as WHITES
from ..channels import Channel as Channel, FLG_ANGLE as FLG_ANGLE
from ..spaces import Cylindrical as Cylindrical, Space as Space
from ..types import Vector as Vector
from .oklab import oklab_to_linear_srgb as oklab_to_linear_srgb
from .oklch import ACHROMATIC_THRESHOLD as ACHROMATIC_THRESHOLD
from _typeshed import Incomplete

FLT_MAX: Incomplete
K_1: float
K_2: float
K_3: Incomplete

def toe(x: float) -> float: ...
def toe_inv(x: float) -> float: ...
def to_st(cusp: Vector) -> Vector: ...
def get_st_mid(a: float, b: float) -> Vector: ...
def find_cusp(a: float, b: float) -> Vector: ...
def find_gamut_intersection(a: float, b: float, l1: float, c1: float, l0: float, cusp: Vector | None = None) -> float: ...
def get_cs(lab: Vector) -> Vector: ...
def compute_max_saturation(a: float, b: float) -> float: ...
def okhsl_to_oklab(hsl: Vector) -> Vector: ...
def oklab_to_okhsl(lab: Vector) -> Vector: ...

class Okhsl(Cylindrical, Space):
    BASE: str
    NAME: str
    SERIALIZE: Incomplete
    CHANNELS: Incomplete
    CHANNEL_ALIASES: Incomplete
    WHITE: Incomplete
    GAMUT_CHECK: str
    def normalize(self, coords: Vector) -> Vector: ...
    def to_base(self, coords: Vector) -> Vector: ...
    def from_base(self, coords: Vector) -> Vector: ...
