from .error import *
from .tokens import *
from .events import *
from .nodes import *
from .loader import *
from .dumper import *
from .cyaml import *
from _typeshed import Incomplete
from collections.abc import Generator

__version__: str
__with_libyaml__: bool

def warnings(settings: Incomplete | None = None): ...

class YAMLLoadWarning(RuntimeWarning): ...

def load_warning(method) -> None: ...
def scan(stream, Loader=...) -> Generator[Incomplete]: ...
def parse(stream, Loader=...) -> Generator[Incomplete]: ...
def compose(stream, Loader=...): ...
def compose_all(stream, Loader=...) -> Generator[Incomplete]: ...
def load(stream, Loader: Incomplete | None = None): ...
def load_all(stream, Loader: Incomplete | None = None) -> Generator[Incomplete]: ...
def full_load(stream): ...
def full_load_all(stream): ...
def safe_load(stream): ...
def safe_load_all(stream): ...
def unsafe_load(stream): ...
def unsafe_load_all(stream): ...
def emit(events, stream: Incomplete | None = None, Dumper=..., canonical: Incomplete | None = None, indent: Incomplete | None = None, width: Incomplete | None = None, allow_unicode: Incomplete | None = None, line_break: Incomplete | None = None): ...
def serialize_all(nodes, stream: Incomplete | None = None, Dumper=..., canonical: Incomplete | None = None, indent: Incomplete | None = None, width: Incomplete | None = None, allow_unicode: Incomplete | None = None, line_break: Incomplete | None = None, encoding: Incomplete | None = None, explicit_start: Incomplete | None = None, explicit_end: Incomplete | None = None, version: Incomplete | None = None, tags: Incomplete | None = None): ...
def serialize(node, stream: Incomplete | None = None, Dumper=..., **kwds): ...
def dump_all(documents, stream: Incomplete | None = None, Dumper=..., default_style: Incomplete | None = None, default_flow_style: bool = False, canonical: Incomplete | None = None, indent: Incomplete | None = None, width: Incomplete | None = None, allow_unicode: Incomplete | None = None, line_break: Incomplete | None = None, encoding: Incomplete | None = None, explicit_start: Incomplete | None = None, explicit_end: Incomplete | None = None, version: Incomplete | None = None, tags: Incomplete | None = None, sort_keys: bool = True): ...
def dump(data, stream: Incomplete | None = None, Dumper=..., **kwds): ...
def safe_dump_all(documents, stream: Incomplete | None = None, **kwds): ...
def safe_dump(data, stream: Incomplete | None = None, **kwds): ...
def add_implicit_resolver(tag, regexp, first: Incomplete | None = None, Loader=..., Dumper=...) -> None: ...
def add_path_resolver(tag, path, kind: Incomplete | None = None, Loader=..., Dumper=...) -> None: ...
def add_constructor(tag, constructor, Loader=...) -> None: ...
def add_multi_constructor(tag_prefix, multi_constructor, Loader=...) -> None: ...
def add_representer(data_type, representer, Dumper=...) -> None: ...
def add_multi_representer(data_type, multi_representer, Dumper=...) -> None: ...

class YAMLObjectMetaclass(type):
    def __init__(cls, name, bases, kwds) -> None: ...

class YAMLObject(metaclass=YAMLObjectMetaclass):
    yaml_loader = Loader
    yaml_dumper = Dumper
    yaml_tag: Incomplete
    yaml_flow_style: Incomplete
    @classmethod
    def from_yaml(cls, loader, node): ...
    @classmethod
    def to_yaml(cls, dumper, data): ...
