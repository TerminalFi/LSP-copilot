from ._compat import iteritems as iteritems
from .visitor import NodeVisitor as NodeVisitor
from _typeshed import Incomplete

VAR_LOAD_PARAMETER: str
VAR_LOAD_RESOLVE: str
VAR_LOAD_ALIAS: str
VAR_LOAD_UNDEFINED: str

def find_symbols(nodes, parent_symbols: Incomplete | None = None): ...
def symbols_for_node(node, parent_symbols: Incomplete | None = None): ...

class Symbols:
    level: Incomplete
    parent: Incomplete
    refs: Incomplete
    loads: Incomplete
    stores: Incomplete
    def __init__(self, parent: Incomplete | None = None, level: Incomplete | None = None) -> None: ...
    def analyze_node(self, node, **kwargs) -> None: ...
    def find_load(self, target): ...
    def find_ref(self, name): ...
    def ref(self, name): ...
    def copy(self): ...
    def store(self, name) -> None: ...
    def declare_parameter(self, name): ...
    def load(self, name) -> None: ...
    def branch_update(self, branch_symbols) -> None: ...
    def dump_stores(self): ...
    def dump_param_targets(self): ...

class RootVisitor(NodeVisitor):
    sym_visitor: Incomplete
    def __init__(self, symbols) -> None: ...
    visit_Template: Incomplete
    visit_Block: Incomplete
    visit_Macro: Incomplete
    visit_FilterBlock: Incomplete
    visit_Scope: Incomplete
    visit_If: Incomplete
    visit_ScopedEvalContextModifier: Incomplete
    def visit_AssignBlock(self, node, **kwargs) -> None: ...
    def visit_CallBlock(self, node, **kwargs) -> None: ...
    def visit_OverlayScope(self, node, **kwargs) -> None: ...
    def visit_For(self, node, for_branch: str = 'body', **kwargs) -> None: ...
    def visit_With(self, node, **kwargs) -> None: ...
    def generic_visit(self, node, *args, **kwargs) -> None: ...

class FrameSymbolVisitor(NodeVisitor):
    symbols: Incomplete
    def __init__(self, symbols) -> None: ...
    def visit_Name(self, node, store_as_param: bool = False, **kwargs) -> None: ...
    def visit_NSRef(self, node, **kwargs) -> None: ...
    def visit_If(self, node, **kwargs): ...
    def visit_Macro(self, node, **kwargs) -> None: ...
    def visit_Import(self, node, **kwargs) -> None: ...
    def visit_FromImport(self, node, **kwargs) -> None: ...
    def visit_Assign(self, node, **kwargs) -> None: ...
    def visit_For(self, node, **kwargs) -> None: ...
    def visit_CallBlock(self, node, **kwargs) -> None: ...
    def visit_FilterBlock(self, node, **kwargs) -> None: ...
    def visit_With(self, node, **kwargs) -> None: ...
    def visit_AssignBlock(self, node, **kwargs) -> None: ...
    def visit_Scope(self, node, **kwargs) -> None: ...
    def visit_Block(self, node, **kwargs) -> None: ...
    def visit_OverlayScope(self, node, **kwargs) -> None: ...
