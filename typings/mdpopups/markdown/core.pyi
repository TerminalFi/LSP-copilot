from _typeshed import Incomplete

__all__ = ['Markdown', 'markdown', 'markdownFromFile']

class Markdown:
    doc_tag: str
    output_formats: Incomplete
    tab_length: Incomplete
    ESCAPED_CHARS: Incomplete
    block_level_elements: Incomplete
    registeredExtensions: Incomplete
    docType: str
    stripTopLevelTags: bool
    references: Incomplete
    htmlStash: Incomplete
    def __init__(self, **kwargs) -> None: ...
    preprocessors: Incomplete
    parser: Incomplete
    inlinePatterns: Incomplete
    treeprocessors: Incomplete
    postprocessors: Incomplete
    def build_parser(self): ...
    def registerExtensions(self, extensions, configs): ...
    def build_extension(self, ext_name, configs): ...
    def registerExtension(self, extension): ...
    def reset(self): ...
    output_format: Incomplete
    serializer: Incomplete
    def set_output_format(self, format): ...
    def is_block_level(self, tag): ...
    lines: Incomplete
    def convert(self, source): ...
    def convertFile(self, input: Incomplete | None = None, output: Incomplete | None = None, encoding: Incomplete | None = None): ...

def markdown(text, **kwargs): ...
def markdownFromFile(**kwargs) -> None: ...
