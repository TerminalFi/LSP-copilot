from .pep562 import Pep562 as Pep562
from _typeshed import Incomplete
from typing import NamedTuple

PY37: Incomplete
__deprecated__: Incomplete
BLOCK_LEVEL_ELEMENTS: Incomplete
STX: str
ETX: str
INLINE_PLACEHOLDER_PREFIX: Incomplete
INLINE_PLACEHOLDER: Incomplete
INLINE_PLACEHOLDER_RE: Incomplete
AMP_SUBSTITUTE: Incomplete
HTML_PLACEHOLDER: Incomplete
HTML_PLACEHOLDER_RE: Incomplete
TAG_PLACEHOLDER: Incomplete
RTL_BIDI_RANGES: Incomplete

def deprecated(message, stacklevel: int = 2): ...
def isBlockLevel(tag): ...
def parseBoolValue(value, fail_on_errors: bool = True, preserve_none: bool = False): ...
def code_escape(text): ...

class AtomicString(str): ...

class Processor:
    md: Incomplete
    def __init__(self, md: Incomplete | None = None) -> None: ...
    @property
    def markdown(self): ...

class HtmlStash:
    html_counter: int
    rawHtmlBlocks: Incomplete
    tag_counter: int
    tag_data: Incomplete
    def __init__(self) -> None: ...
    def store(self, html): ...
    def reset(self) -> None: ...
    def get_placeholder(self, key): ...
    def store_tag(self, tag, attrs, left_index, right_index): ...

class _PriorityItem(NamedTuple):
    name: Incomplete
    priority: Incomplete

class Registry:
    def __init__(self) -> None: ...
    def __contains__(self, item) -> bool: ...
    def __iter__(self): ...
    def __getitem__(self, key): ...
    def __len__(self) -> int: ...
    def get_index_for_name(self, name): ...
    def register(self, item, name, priority) -> None: ...
    def deregister(self, name, strict: bool = True) -> None: ...
    def __setitem__(self, key, value) -> None: ...
    def __delitem__(self, key) -> None: ...
    def add(self, key, value, location) -> None: ...

def __getattr__(name): ...
