from ..filter import Filter as Filter
from ..plugin import find_plugin_filters as find_plugin_filters
from ..token import Comment as Comment, Error as Error, Keyword as Keyword, Name as Name, String as String, Whitespace as Whitespace, string_to_tokentype as string_to_tokentype
from ..util import ClassNotFound as ClassNotFound, OptionError as OptionError, get_bool_opt as get_bool_opt, get_choice_opt as get_choice_opt, get_int_opt as get_int_opt, get_list_opt as get_list_opt, string_types as string_types, text_type as text_type
from _typeshed import Incomplete
from collections.abc import Generator

def find_filter_class(filtername): ...
def get_filter_by_name(filtername, **options): ...
def get_all_filters() -> Generator[Incomplete]: ...

class CodeTagFilter(Filter):
    tag_re: Incomplete
    def __init__(self, **options) -> None: ...
    def filter(self, lexer, stream) -> Generator[Incomplete]: ...

class KeywordCaseFilter(Filter):
    convert: Incomplete
    def __init__(self, **options) -> None: ...
    def filter(self, lexer, stream) -> Generator[Incomplete]: ...

class NameHighlightFilter(Filter):
    names: Incomplete
    tokentype: Incomplete
    def __init__(self, **options) -> None: ...
    def filter(self, lexer, stream) -> Generator[Incomplete]: ...

class ErrorToken(Exception): ...

class RaiseOnErrorTokenFilter(Filter):
    exception: Incomplete
    def __init__(self, **options) -> None: ...
    def filter(self, lexer, stream) -> Generator[Incomplete]: ...

class VisibleWhitespaceFilter(Filter):
    wstt: Incomplete
    def __init__(self, **options) -> None: ...
    def filter(self, lexer, stream) -> Generator[Incomplete, None, Incomplete]: ...

class GobbleFilter(Filter):
    n: Incomplete
    def __init__(self, **options) -> None: ...
    def gobble(self, value, left): ...
    def filter(self, lexer, stream) -> Generator[Incomplete]: ...

class TokenMergeFilter(Filter):
    def __init__(self, **options) -> None: ...
    def filter(self, lexer, stream) -> Generator[Incomplete]: ...

FILTERS: Incomplete
