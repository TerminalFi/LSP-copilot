import types
from ..modeline import get_filetype_from_buffer as get_filetype_from_buffer
from ..plugin import find_plugin_lexers as find_plugin_lexers
from ..util import ClassNotFound as ClassNotFound, guess_decode as guess_decode, itervalues as itervalues
from ._mapping import LEXERS as LEXERS
from _typeshed import Incomplete
from collections.abc import Generator

def get_all_lexers() -> Generator[Incomplete]: ...
def find_lexer_class(name): ...
def get_lexer_by_name(_alias, **options): ...
def find_lexer_class_for_filename(_fn, code: Incomplete | None = None): ...
def get_lexer_for_filename(_fn, code: Incomplete | None = None, **options): ...
def get_lexer_for_mimetype(_mime, **options): ...
def guess_lexer_for_filename(_fn, _text, **options): ...
def guess_lexer(_text, **options): ...

class _automodule(types.ModuleType):
    def __getattr__(self, name): ...

oldmod: Incomplete
newmod: Incomplete
