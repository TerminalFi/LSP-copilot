from LSP.plugin.core.protocol import Notification as Notification, Request as Request, Response as Response
from _typeshed import Incomplete
from typing import Any, Callable

TEST_CONFIG: Incomplete
DISABLED_CONFIG: Incomplete
basic_responses: Incomplete

class MockSession:
    responses: Incomplete
    _notifications: Incomplete
    _async_response_callback: Incomplete
    def __init__(self, async_response: Incomplete | None = None) -> None: ...
    def send_request(self, request: Request, on_success: Callable, on_error: Callable = None) -> None: ...
    def execute_request(self, request: Request) -> Any: ...
    def send_notification(self, notification: Notification) -> None: ...
    def on_notification(self, name, handler: Callable) -> None: ...
    def on_request(self, name, handler: Callable) -> None: ...
    def set_error_display_handler(self, handler: Callable) -> None: ...
    def set_crash_handler(self, handler: Callable) -> None: ...
    def set_log_payload_handler(self, handler: Callable) -> None: ...
    def exit(self) -> None: ...
    def send_response(self, response: Response) -> None: ...
